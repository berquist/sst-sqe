#! /bin/bash
pushd test/testSuites

if [ $? != 0 ] ; then
    echo "   ################################################################################ "
    echo "   cd failed"
    echo "  Must be issue with Directory structure or pwd"
    echo "    PWD is `pwd`"
    echo "   ################################################################################ "
    exit 
fi

echo "            Modifying test Suites to write python files from -output-config option and then test using the python files"
echo " Number of parameters is $1"


HERE=`pwd`
pushd ${SST_ROOT}/test/testSuites
ls testSuite_* | grep -v -e macro > $HERE/Suite.list
popd
wc Suite.list
sed -ixx 's/$/ /' Suite.list

rm -f ${SST_ROOT}/run.for.output.config
touch  ${SST_ROOT}/run.for.output.config
chmod +x  ${SST_ROOT}/run.for.output.config

for fn in  testSuite_Ariel.sh  testSuite_cassini_prefetch.sh  testSuite_check_maxrss.sh  testSuite_hybridsim.sh  testSuite_iris.sh  testSuite_M5.sh   testSuite_memHierarchy_bin.sh  testSuite_memHierarchy_sdl.sh  testSuite_merlin.sh testSuite_openMP.sh  testSuite_patterns.sh  testSuite_portals.sh  testSuite_prospero.sh  testSuite_qsimComponent.sh  testSuite_scheduler.sh  testSuite_SiriusZodiacTrace.sh  testSuite_sst_mcniagara.sh testSuite_sst_mcopteron.sh  testSuite_VaultSim.sh testSuite_embernightly.sh  testSuite_stream.sh  testSuite_zoltan.sh testSuite_noncacheable_openMP.sh  testSuite_cacheTracer.sh testSuite_dirnoncacheable_openMP.sh testSuite_macsim.sh testSuite_memHSieve.sh testSuite_miranda.sh testSuite_partitioner.sh testSuite_simpleClockerComponent.sh testSuite_simpleDistribComponent.sh testSuite_simpleLookupTableComponent.sh testSuite_simpleMessageGeneratorComponent.sh testSuite_simpleRNGComponent.sh testSuite_simpleStatisticsComponent.sh 
do 

    sed -ixx "/^$fn /d" Suite.list
#   wc Suite.list

echo "test/testSuites/${fn}" >> ${SST_ROOT}/run.for.output.config

svn revert $fn

                         #  Remember insert goes BEFORE!
sed -i'.sd' '/sut.*sutArgs/i \
if [ `echo $sutArgs | wc -w` != 1 ] ; then \
echo "########################################################" \
echo "#" \
echo "#   SUTARGS = $sutArgs " \
echo "#" \
echo "########################################################" \
fi \
echo "                       Generate Python File " \
2Breplaced --run-mode init > ${outFile}0 2>$errFilex \
if [ $? != 0 ] ; then \
     fail "Write of Python file from original input failed" \
     echo "      -------- stderr follows ----- "  \
     cat $errFilex \
     echo " " \
     wc ${outFile}0 \
     echo " - - - - - - - -   Abandoning  $testDataFileBase " \
     echo " " \
     return 1 \
fi \
ls -l $pyFile \
wc $pyFile \
cksum $pyFile \
echo "Done with step 1 building pyFile" \
echo " Check original output vs. generated Python output " \
holdArgs=$sutArgs \
echo "               Run from generated Python " \
$sut $pyFile > ${outFile} 2>&1 \
if [ $? != 0 ] ; then \
     fail "Execution using generated Python file input failed" \
     wc $pyFile \
     echo "    Start of generated Python file is:" \
     sed 25q $pyFile \
     echo "      -------- Output follows ----- "  \
     wc ${outFile} \
     cat ${outFile} \
     echo " - - - - - - - -   Abandoning  $testDataFileBase " \
     echo " " \
     return 1 \
fi \
echo "               Run original " \
$sut $holdArgs > ${outFile}orig 2>&1 \
diff ${outFile}orig ${outFile}  > $errdiff \
if [ $? == 0 ] ; then \
   echo "    ---- Output from generated Python matches Original ----" \
   return 0 \
else \
   echo "  -----------------   Output from generated Python input is Different! ---------" \
   wc ${outFile}orig ${outFile} \
   wc $errdiff \
   cat $errdiff | sed 50q \
   echo "  -----------------   Output from generated Python input is Different! ---------" \
fi \
cksum  ${outFile}orig ${outFile} \
popd \
return 0 \
 ' $fn

##sed -i'.se' '/sut.*sutArgs/s/.sutArgs./pyFile2/' $fn

sed -i'.sf' 's/2Breplaced/${sut} --output-config $pyFile ${sutArgs}/' $fn
 
sed -i'.sg' '/outFile=/i \
pyFile="${SST_TEST_INPUTS}/${testDataFileBase}.py" \
errdiff="${SST_TEST_OUTPUTS}/${testDataFileBase}.errdiff" \
errFilex="${SST_TEST_OUTPUTS}/${testDataFileBase}.errx" \
 ' $fn

sed -i'.sh' 's/export SST_TEST_ONE_TEST_TIMEOUT=/export SST_TEST_ONE_TEST_TIMEOUT=1/' $fn
rm ${fn}.??
## grep Done.with -B 6 -A 6 $fn
done

echo "##########################################################################"
echo "## "
echo "##     The following Suites are not checked "
echo ' '
    cat Suite.list

echo "## "
echo "##########################################################################"
popd

